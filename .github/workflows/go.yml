# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Code checkout 
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Initializing Database
      run: docker compose up -d postgres

    - name: Lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: v2.0
        args: controllers/ database/ models/ routes/

    - name: Test
      run: DB_HOST=${{ secrets.DB_HOST }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_USER=${{ secrets.DB_USER }} DB_NAME=${{secrets.DB_NAME}} DB_PORT=${{ secrets.DB_PORT }} go test -v main_test.go

    - name: Build
      run: go build main.go

    - name: Compiled Project
      uses: actions/upload-artifact@v4
      with:
        name: compiled_project
        path: main
    
    - name: Notify Discord about Artifact
      env:
        DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK}}
      run: |
          ARTIFACT_NAME="compiled_project"
          BUILD_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
    
          curl -H "Content-Type: application/json" \
            -X POST \
             -d "{
                \"content\": \"âœ… **Artefato Gerado**\nðŸ§± Nome: \`${ARTIFACT_NAME}\`\nðŸ“… Data: ${BUILD_DATE}\nðŸ‘¤ Por: **${{ github.actor }}**\nðŸ”— [View Build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\"
              }" \
            $DISCORD_WEBHOOK